(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{438:function(t,s,e){"use strict";e.r(s);var a=e(14),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"项目概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目概述"}},[t._v("#")]),t._v(" 项目概述")]),t._v(" "),e("h3",{attrs:{id:"要实现的功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#要实现的功能"}},[t._v("#")]),t._v(" 要实现的功能")]),t._v(" "),e("p",[t._v("以下称用户端和被控制端来区分")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("用户端有自己的用户编码，也可以输入控制码来控制远程主机。")])]),t._v(" "),e("li",[e("p",[t._v("被控制端将自己桌面的视屏流传递给用户端，用户端把键盘、鼠标操作回传给被控制端实现控制，（即被控制端要响应用户端的指令）。")])])]),t._v(" "),e("h3",{attrs:{id:"实现的步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现的步骤"}},[t._v("#")]),t._v(" 实现的步骤")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("新建一个用户端的页面，展示用户端本身的控制码，需要有发起控制另一主机的事件。")])]),t._v(" "),e("li")]),t._v(" "),e("h3",{attrs:{id:"项目参考的资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目参考的资料"}},[t._v("#")]),t._v(" 项目参考的资料")]),t._v(" "),e("p",[t._v("实例代码 github 地址\nhttps://github.com/tielan/geektime-electron")]),t._v(" "),e("h2",{attrs:{id:"被控制端如何响应指令？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#被控制端如何响应指令？"}},[t._v("#")]),t._v(" 被控制端如何响应指令？")]),t._v(" "),e("h3",{attrs:{id:"robot-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#robot-js"}},[t._v("#")]),t._v(" robot.js")]),t._v(" "),e("blockquote",[e("p",[t._v("Node.js Desktop Automation. Control the mouse, keyboard, and read the screen.")])]),t._v(" "),e("ul",[e("li",[t._v("nodejs 的桌面自动化工具")]),t._v(" "),e("li",[t._v("控制鼠标，键盘，读取屏幕的信息。")])]),t._v(" "),e("h4",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("cnpm i robotjs\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),e("p",[t._v("在 windows 下，你可能会安装出错。")]),t._v(" "),e("p",[t._v("gyp "),e("code",[t._v("ERR! find Python")])]),t._v(" "),e("p",[t._v("你可以尝试以下方法："),e("a",{attrs:{href:"https://github.com/nodejs/node-gyp#on-windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("详参"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --global windows-build-tools\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" msvs_version "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),t._v("\n重新编译，若还出先问题，则需要安装\ncnpm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g node-gyp\n注意node版本要大于12。否则会出错。\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/6891143846105710599",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里也有一篇参考的博客"),e("OutboundLink")],1)])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("robotjs 是基于 c++写的，在不同的平台，不同的 node 版本下都需要重新编译才能使用。重新编译的方法如下：")])]),t._v(" "),e("ul",[e("li",[t._v("手动编译\n"),e("ul",[e("li",[e("code",[t._v("npm rebuild --runtime=electron --disturl=https://atom.io/download/atom-shell\\ --target=<electron 版本> --abi=<对应版本 abi>")])]),t._v(" "),e("li",[t._v("electron 版本 可以通过 process.versions.electron")]),t._v(" "),e("li",[t._v("abi 版本 可以通过 process.version.node 查看到 node 的版本，然后在"),e("a",{attrs:{href:"https://github.com/mapbox/node-pre-gyp/blob/master/lib/util/abi_crosswalk.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("abi_crosswalk"),e("OutboundLink")],1),t._v("查看 abi 版本")]),t._v(" "),e("li",[t._v("例如: "),e("code",[t._v("npm rebuild --runtime=electron --disturl=https://atom.io/download/atom-shell\\ --target=9.4.1 --abi=72")])])])]),t._v(" "),e("li",[t._v("使用 "),e("code",[t._v("electron-rebuild")]),t._v("自动编译\n"),e("ul",[e("li",[t._v("cnpm install electron-rebuild -D")]),t._v(" "),e("li",[t._v("npx electron-rebuild")])])])]),t._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),e("p",[t._v("当然你也可能会发现以下错误（引入类库，初始化方法时报错）\n错误内容如下")]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("electron/js2c/asar.js:140\nUncaught Error: Loading non-context-aware native module "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" renderer: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("?\\D:\\study"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\e"}},[t._v("\\e")]),t._v("lectron"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v("emote-control"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("ode_modules"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v("obotjs"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\b"}},[t._v("\\b")]),t._v("uild\\Release"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v("obotjs.node'")]),t._v(",\nbut app.allowRendererProcessReuse is true. See https://github.com/electron/electron/issues/18397.\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("解决方法：\n在 background.js 中，将 app.allowRendererProcessReuse 设置为 false，代码示例如下")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" protocol"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" BrowserWindow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" globalShortcut "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"electron"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("allowRendererProcessReuse "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在此处设置为false即可")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])])]),t._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),e("p",[t._v("当然你可能还会出现以下错误")]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("Uncaught Error: The module "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("?\\D:\\study"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\e"}},[t._v("\\e")]),t._v("lectron"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v("emote-control"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("ode_modules"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v("obotjs"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\b"}},[t._v("\\b")]),t._v("uild\\Release"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v("obotjs.node'")]),t._v("\nwas compiled against a different Node.js version using\nNODE_MODULE_VERSION "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v(". This version of Node.js requires\nNODE_MODULE_VERSION "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(". Please try re-compiling or re-installing\nthe module "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("for instance, using "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" rebuild"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" or "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[t._v("这是因为 rebuild 的 node-abi 和 electron 的版本不相匹配导致的，"),e("code",[t._v("解决方法参考上面的手动rebuild")])])]),t._v(" "),e("h4",{attrs:{id:"方法介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法介绍"}},[t._v("#")]),t._v(" 方法介绍")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://robotjs.io/docs/syntax",target:"_blank",rel:"noopener noreferrer"}},[t._v("详参见"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("鼠标移动："),e("code",[t._v("robot.moveMouse(x,y)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("x")]),t._v(" Number")]),t._v(" "),e("li",[e("code",[t._v("y")]),t._v(" Number")])])]),t._v(" "),e("li",[t._v("鼠标点击："),e("code",[t._v("robot.mouseClick([button], [double])")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("button")]),t._v(" String - 点击鼠标的左键（"),e("code",[t._v("left")]),t._v("）,右键（"),e("code",[t._v("right")]),t._v("）,中键（"),e("code",[t._v("middle")]),t._v("）。默认值是"),e("code",[t._v("left")])]),t._v(" "),e("li",[e("code",[t._v("double")]),t._v(" Boolean - 是否双击。默认 false")])])]),t._v(" "),e("li",[t._v("按键："),e("code",[t._v("robot.keyTap(key,[,modifer])")])])]),t._v(" "),e("h3",{attrs:{id:"键盘事件的监听和响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#键盘事件的监听和响应"}},[t._v("#")]),t._v(" 键盘事件的监听和响应")]),t._v(" "),e("h4",{attrs:{id:"监听键盘事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#监听键盘事件"}},[t._v("#")]),t._v(" 监听键盘事件")]),t._v(" "),e("p",[t._v("通过 window.onkeydown 获取按键输入的信息。然后在传到主进程。")]),t._v(" "),e("h4",{attrs:{id:"响应键盘事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应键盘事件"}},[t._v("#")]),t._v(" 响应键盘事件")]),t._v(" "),e("p",[t._v("需要注意以下几点：")]),t._v(" "),e("ul",[e("li",[t._v("modifer（修饰键）的处理：shift,alt,meta,control 等。")]),t._v(" "),e("li",[t._v("按键转换（vkey）")])]),t._v(" "),e("h3",{attrs:{id:"鼠标事件的监听和响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#鼠标事件的监听和响应"}},[t._v("#")]),t._v(" 鼠标事件的监听和响应")]),t._v(" "),e("h4",{attrs:{id:"鼠标事件的监听"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#鼠标事件的监听"}},[t._v("#")]),t._v(" 鼠标事件的监听")]),t._v(" "),e("p",[t._v("这里我们通过 window.onmouseup 来监听鼠标的点击事件，然后将以下参数传输到主进程：")]),t._v(" "),e("ul",[e("li",[t._v("鼠标点击的坐标，clientX 和 clientY")]),t._v(" "),e("li",[t._v("屏幕的宽高")]),t._v(" "),e("li",[t._v("视频的宽高")])]),t._v(" "),e("h4",{attrs:{id:"鼠标事件的响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#鼠标事件的响应"}},[t._v("#")]),t._v(" 鼠标事件的响应")]),t._v(" "),e("p",[t._v("接收到渲染进程传过来的鼠标事件的参数后，我们需要将坐标转化为在被控制端上的坐标。计算的公式如下：")]),t._v(" "),e("ul",[e("li",[t._v("x' = x * video.width / screen.width")]),t._v(" "),e("li",[t._v("y' = y * video.height / screen.height")])]),t._v(" "),e("h2",{attrs:{id:"基于-webrtc-的视频流传输"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-webrtc-的视频流传输"}},[t._v("#")]),t._v(" 基于 WebRTC 的视频流传输")]),t._v(" "),e("h3",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("h4",{attrs:{id:"什么是-webrtc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-webrtc"}},[t._v("#")]),t._v(" 什么是 WebRTC?")]),t._v(" "),e("p",[t._v("如下图：\n"),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mytingbao/image_bed_storestore/img/202101/20210130104945.png",alt:""}})]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("WebRTC 即 Web Real_Time Comunication 旨在为用户提供一种端对端数据传输的方法，主要分为三部分：")]),t._v(" "),e("ul",[e("li",[t._v("获取用户的媒体流")]),t._v(" "),e("li",[t._v("建立连接")]),t._v(" "),e("li",[t._v("传输数据")])])]),t._v(" "),e("h4",{attrs:{id:"从一个故事说起"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从一个故事说起"}},[t._v("#")]),t._v(" 从一个故事说起")]),t._v(" "),e("p",[t._v("首先，我们先讲一个实际案例：")]),t._v(" "),e("ol",[e("li",[t._v("一家企业需要招聘一位前端抠图仔，首先他找到 boss 直聘这个平台，在平台上创建了一份招聘信息，并且本地也存了档，然后再发布到平台上。")]),t._v(" "),e("li",[t._v("这时一位前端抠图仔也在 boss 直聘上找工作，他首先把这家企业的招聘信息作为自己的目标，然后在平台上写下了自己的复函，并在本地保存了求职记录，最后再发布到平台上。")]),t._v(" "),e("li",[t._v("企业也收到了这位抠图仔的复函，并把他设为自己的招聘目标。")])]),t._v(" "),e("p",[t._v("至此，最基本通讯已经建立起来了。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mytingbao/image_bed_storestore/img/202101/20210130104744.png",alt:""}})])])}),[],!1,null,null,null);s.default=r.exports}}]);